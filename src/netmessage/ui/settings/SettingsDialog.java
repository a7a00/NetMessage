/*
 * To change this license header
    @Override
    public StringBuffer format(double d, StringBuffer sb, FieldPosition fp) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public StringBuffer format(long l, StringBuffer sb, FieldPosition fp) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Number parse(String string, ParsePosition pp) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package netmessage.ui.settings;

import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.text.NumberFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.BackingStoreException;
import javax.swing.table.DefaultTableModel;
import netmessage.NetMessage;

/**
 *
 * @author isaac
 */
public class SettingsDialog extends javax.swing.JFrame {
    
    /**
     * Creates new form SettingsDialog
     */
    public SettingsDialog() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        f = new RegexFormatter("^(?=.*\\d)[\\d\\s]{4}$");
        portField = new javax.swing.JFormattedTextField(f);
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        allowedTable = new javax.swing.JTable();
        allConnectionsBox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        NumberFormat f = NumberFormat.getInstance();
        f.setMinimumIntegerDigits(1);
        ctField = new javax.swing.JFormattedTextField(f);
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setTitle("NetMessage Settings");

        jLabel2.setText("IN DEVELOPMENT");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(jLabel2)
                .addContainerGap(199, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jLabel2)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        tabs.addTab("General", jPanel1);

        jLabel1.setText("Port:");

        portField.setText(NetMessage.networkSettings.get("port", "5555"));

        allowedTable.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.highlight"));
        //Data double vector
        //Oracle required this, not me
        Vector<Vector<String>> data = new Vector<>();

        for(int i = 0; i < NetMessage.networkSettings.getInt("tableRowCount", 0); i++) {
            Vector<String> d = new Vector<String>();

            d.add(NetMessage.networkSettings.get("Name;" + i, ""));
            d.add(NetMessage.networkSettings.get("IP;"+i, "127.0.0.1"));

            data.add(i, d);
        }

        //Names Vector
        Vector<String> names = new Vector<String>();
        names.add("Name");
        names.add("IP");
        allowedTable.setModel(new javax.swing.table.DefaultTableModel(data, names)
        );
        if(NetMessage.networkSettings.getBoolean("allowAllConnections", true) == true) {
            allowedTable.setEnabled(false);
        } else {
            allowedTable.setEnabled(true);
        }
        allowedTable.setToolTipText("Press enter to add a new row");
        allowedTable.setColumnSelectionAllowed(true);
        allowedTable.getTableHeader().setReorderingAllowed(false);
        allowedTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                allowedTablePropertyChange(evt);
            }
        });
        allowedTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                allowedTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(allowedTable);
        allowedTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (allowedTable.getColumnModel().getColumnCount() > 0) {
            allowedTable.getColumnModel().getColumn(1).setCellEditor(new IPEditor());
        }

        allConnectionsBox.setSelected(NetMessage.networkSettings.getBoolean("allowAllConnections", true));
        allConnectionsBox.setText("Allow Connections From All Clients");
        allConnectionsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allConnectionsBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Connection Timeout(Sec):");

        Integer ctFieldText = NetMessage.networkSettings.getInt("timeout", 5);
        ctField.setText(ctFieldText.toString());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 33, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(allConnectionsBox))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ctField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(ctField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allConnectionsBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        tabs.addTab("Connection", jPanel2);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabs)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void allConnectionsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allConnectionsBoxActionPerformed
        allowedTable.setEnabled(!allConnectionsBox.isSelected());
    }//GEN-LAST:event_allConnectionsBoxActionPerformed

    private void allowedTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_allowedTablePropertyChange
        DefaultTableModel dtm = (DefaultTableModel)allowedTable.getModel();
        
        //Prevents editing the table is the checkbox is unchecked
        
        //Check if we enabled the table or not
        //TODO: Probably a good idea to move this somewhere else
        if(evt.getPropertyName().equals("enabled") && evt.getNewValue().equals(true) && dtm.getRowCount() == 0) {
            //If there is nothing in the table, create a new row and edit it.
            dtm.addRow(new Object[]{"", ""});
            allowedTable.requestFocusInWindow();
            allowedTable.editCellAt(0, 0);
            allowedTable.setModel(dtm);
        }  else if (evt.getPropertyName().equals("enabled") && evt.getNewValue().equals(false)) {
            //Stops editing and changes the focus
            allowedTable.getCellEditor().stopCellEditing();
            jLabel1.requestFocusInWindow();
        }
    }//GEN-LAST:event_allowedTablePropertyChange

    
    
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        try {
            //Create a new Preference class everytime, ensures override
            NetMessage.generalSettings.clear();
            NetMessage.networkSettings.clear();
        } catch (BackingStoreException ex) {
            Logger.getLogger(SettingsDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        //General Settings code goes here
        
        //Network Settings Code
        String v = this.portField.getText();
        NetMessage.networkSettings.put("port", v);
        
        NetMessage.networkSettings.putInt("timeout", Integer.parseInt(ctField.getText()));
        
        if(this.allConnectionsBox.isSelected()) {
            //Allow all connections
            NetMessage.networkSettings.putBoolean("allowAllConnections", true);
        } else {
            NetMessage.networkSettings.putBoolean("allowAllConnections", false);
            
            NetMessage.networkSettings.putInt("tableRowCount", this.allowedTable.getModel().getRowCount());
            for(int i = 0; i < this.allowedTable.getModel().getRowCount(); i++) {
                NetMessage.networkSettings.put("Name;" + i, (String)allowedTable.getValueAt(i, 0));
                NetMessage.networkSettings.put("IP;" + i, (String)allowedTable.getValueAt(i, 1));
            }
        }
        
        //All done!
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void allowedTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_allowedTableKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DefaultTableModel dtm = (DefaultTableModel)allowedTable.getModel();
            dtm.addRow(new Object[]{"", ""});
            this.allowedTable.setModel(dtm);
            this.allowedTable.requestFocusInWindow();
            this.allowedTable.editCellAt(this.allowedTable.getModel().getRowCount(), 0);
        }
    }//GEN-LAST:event_allowedTableKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox allConnectionsBox;
    private javax.swing.JTable allowedTable;
    private javax.swing.JButton cancelButton;
    private javax.swing.JFormattedTextField ctField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton okButton;
    private javax.swing.JFormattedTextField portField;
    private RegexFormatter f;
    private javax.swing.JTabbedPane tabs;
    // End of variables declaration//GEN-END:variables
}
